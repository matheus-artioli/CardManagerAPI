// <auto-generated />
using System;
using Commons.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Commons.Domain.Migrations
{
    [DbContext(typeof(EfDbContext))]
    partial class EfDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Commons.Data.Models.Cartao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartaoId")
                        .HasColumnType("int")
                        .HasColumnName("CartaoId");

                    b.Property<string>("CodigoSeguranca")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("CodigoSeguranca");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DataExpiracao");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("Numero");

                    b.Property<string>("Titular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Titular");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId")
                        .IsUnique();

                    b.ToTable("Cartoes");
                });

            modelBuilder.Entity("Commons.Data.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartaoId")
                        .HasColumnType("int")
                        .HasColumnName("CartaoId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Commons.Data.Models.Cartao", b =>
                {
                    b.HasOne("Commons.Data.Models.Cliente", "Cliente")
                        .WithOne()
                        .HasForeignKey("Commons.Data.Models.Cartao", "CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Commons.Data.Models.Cliente", b =>
                {
                    b.HasOne("Commons.Data.Models.Cartao", "Cartao")
                        .WithMany()
                        .HasForeignKey("CartaoId");

                    b.Navigation("Cartao");
                });
#pragma warning restore 612, 618
        }
    }
}
